#include <MD_MAX72xx.h>
#include <SPI.h>
#include <EEPROM.h>

#define MAX_DEVICES 11
#define CLK_PIN   7  // D7
#define DATA_PIN  11 // D11
#define CS_PIN    9  // D9
#define alwaysOn  A3 // Analog Pin 17
#define buttonPress A6 // Analog Pin 19

MD_MAX72XX mx = MD_MAX72XX(MD_MAX72XX::FC16_HW, DATA_PIN, CLK_PIN, CS_PIN, MAX_DEVICES);

const int dataAddress = 0; // EEPROM address to start writing data
const int dataSize = 32;   // Size of the data array

const int timeout = 1000;  // Set the timeout value in milliseconds (adjust as needed)
static unsigned long previousMillis = 0;
uint8_t received_data[32];
int mode = 1;

void changeMode() {
  mode = (mode + 1) % 3;
}

void saveDataToEEPROM() {
  for (int i = 0; i < dataSize; i++) {
    EEPROM.write(dataAddress + i, received_data[i]);
  }
}

void loadDataFromEEPROM() {
  for (int i = 0; i < dataSize; i++) {
    received_data[i] = EEPROM.read(dataAddress + i);
  }
}

void setup() {
  mx.begin();
  mx.clear();
  mx.control(mx.INTENSITY, 0x0);
  Serial.begin(9600);
  Serial.setTimeout(1000);
  loadDataFromEEPROM();

  pinMode(alwaysOn, OUTPUT);
  digitalWrite(alwaysOn, HIGH);

  pinMode(buttonPress, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(buttonPress), changeMode, CHANGE);
}

void mode0() {
  for (uint8_t col = 0; col < mx.getColumnCount(); ++col) {
    mx.setColumn(col, received_data[col]);
    delay(50);
    mx.setColumn(col, 0);
  }
  mx.clear();
}

void mode1() {
  for (uint8_t col = 0; col < mx.getColumnCount(); ++col) {
    mx.setColumn(col, received_data[col]);
    delay(50);
  }
  mx.clear();
}

void mode2() {
  for (uint8_t col = 0; col < mx.getColumnCount(); ++col) {
    mx.setColumn(col, received_data[col]);
    delay(50);
    mx.setColumn(col, 0);
  }
}

void loop() {
  if (Serial.available() >= 32 || (millis() - previousMillis) >= timeout) {
    if (Serial.available()) {
      for (int i = 0; i < 32; i++) {
        received_data[i] = Serial.read();
      }
    }

    if (mode == 0)
      mode0();
    else if (mode == 1)
      mode1();
    else if (mode == 2)
      mode2();

    previousMillis = millis();
  }

  saveDataToEEPROM();
}
